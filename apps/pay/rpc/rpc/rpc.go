// Code generated by goctl. DO NOT EDIT.
// Source: pay.proto

package rpc

import (
	"context"

	"github.com/zhoushuguang/lebron/apps/pay/rpc/pay"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = pay.Request
	Response = pay.Response

	Rpc interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultRpc struct {
		cli zrpc.Client
	}
)

func NewRpc(cli zrpc.Client) Rpc {
	return &defaultRpc{
		cli: cli,
	}
}

func (m *defaultRpc) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := pay.NewRpcClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
